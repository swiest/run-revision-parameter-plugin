<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jenkins-ci.plugins</groupId>
    <artifactId>plugin</artifactId>
    <version>1.532.2</version>
  </parent>

  <groupId>de.simonwiest</groupId>
  <artifactId>run-revision-parameter-plugin</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>hpi</packaging>

  <name>Run Revision Parameter Plugin</name>
  <description>
        This Jenkins plugin adds a new job parameter type, allowing use the same SCM revision
        of a previous run in an arbitrary job in the current build.
    
        Currently, Subversion and Git are supported as SCM types.

        Conceptually, this is the reverse of the options "Pass-through Git Commit that was built"
        or "Subversion Revision" for the Parameterized Trigger plugin. Here, a job B looks up the
        SCM revisions to be used from a specific build of job A.
  </description>

  <licenses>
    <license>
      <name>MIT license (also X11)</name>
      <url>http://www.spdx.org/licenses/MIT</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:ssh://github.com/swiest/run-revision-parameter-plugin.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/swiest/run-revision-parameter-plugin.git</developerConnection>
    <url>https://github.com/swiest/run-revision-parameter-plugin</url>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>swiest</id>
      <name>Simon Wiest</name>
      <email>simon.wiest@simonwiest.de</email>
    </developer>
  </developers>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>1.7</source>
            <target>1.7</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.16</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.16</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.4.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.11</version>
          <configuration>
            <configLocation>etc/checkstyle-config.xml</configLocation>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.0.1</version>
          <configuration>
            <targetJdk>1.7</targetJdk>
            <rulesets>
              <ruleset>etc/pmd-config.xml</ruleset>
            </rulesets>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>2.5.3</version>
          <configuration>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <xmlOutput>true</xmlOutput>
            <failOnError>false</failOnError>
            <excludeFilterFile>etc/findbugs-exclude.xml</excludeFilterFile>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jenkins-ci.tools</groupId>
          <artifactId>maven-hpi-plugin</artifactId>
          <configuration>
            <disabledTestInjection>true</disabledTestInjection>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <!-- This plugin entry avoids the warning "[WARNING] Unable to locate 
        Source XRef to link to - DISABLED". Code analysis will work even without 
        this plugin, but this will yield a cleaner console output. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.3</version>
      </plugin>
    </plugins>
  </reporting>

  <dependencies>

    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>subversion</artifactId>
      <version>1.51</version>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.jenkins-ci.plugins</groupId>
      <artifactId>git</artifactId>
      <version>2.0.2</version>
      <optional>true</optional>
    </dependency>

  </dependencies>

</project>
